/* $Id$ */

#ifndef EGECKOCOM_INC
#define EGECKOCOM_INC

#include "iegecko.h"	// Generated by 'xpidl'.
#include "str.h"
#include "nsxpcm.h"

#define ESHARED_CONTRACTID "@zeusw.org/eshared;1"
#define ESHARED_CLASSNAME "EShared"
// {82aff662-258f-4644-a1bb-c0e22f55595d}
#define ESHARED_CID  IESHARED_IID

#define EPRIVATE_CONTRACTID "@zeusw.org/eprivate;1"
#define EPRIVATE_CLASSNAME "EPrivate"
// {eb11441c-aedc-48a2-ba79-936372a30382}
#define EPRIVATE_CID  IEPRIVATE_IID

class ui_textbox__
: public nsxpcm::textbox__
{
protected:
	virtual void NSXPCMOnCommand( void ){}
	virtual void NSXPCMOnClick( void ){}
	virtual void NSXPCMOnInput( void ){}
	virtual void NSXPCMOnFocus( void ){}
	virtual void NSXPCMOnBlur( void ){}
public:
	void Init( void )
	{}
};

class kernel___
{
private:
	str::string _Text;
	ui_textbox__ *_Textbox;
public:
	void reset( bso::bool__ P = true )
	{
		_Text.reset( P );
		_Textbox = NULL;
	}
	kernel___()
	{
		reset( false );
	}
	~kernel___()
	{
		reset();
	}
	void Init( ui_textbox__ &Textbox )
	{
#ifdef XXX_DBG
		if ( _Textbox != NULL )
			ERRu();
#endif
		reset();

		_Text.Init();
		_Textbox = &Textbox;
	}
	void Store( void )
	{
		_Text.Init();
		_Textbox->GetValue( _Text );
	}
	void Recall( void )
	{
		_Textbox->SetValue( _Text );
	}
};

class ui_core__
{
private:
	kernel___ *_Kernel;
	void _Test( void ) const
	{
#ifdef XXX_DBG
		if ( _Kernel == NULL )
			ERRu();
#endif
	}
public:
	void reset( bso::bool__ = true )
	{
		_Kernel = NULL;
	}
	ui_core__()
	{
		reset( false );
	}
	~ui_core__()
	{
		reset();
	}
	void Init( kernel___ &Kernel )
	{
		if ( _Kernel != NULL )
			ERRu();

		reset();

		_Kernel = &Kernel;
	}
	const kernel___ &Kernel( void ) const
	{
		_Test();

		return *_Kernel;
	}
	kernel___ &Kernel( void )
	{
		_Test();

		return *_Kernel;
	}
};

class ui_button__
: public nsxpcm::button__,
  public ui_core__
{
protected:
		virtual void NSXPCMOnInput( void ){}
		virtual void NSXPCMOnFocus( void ){}
		virtual void NSXPCMOnBlur( void ){}
public:
	void Init( kernel___ &Kernel )
	{
		ui_core__::Init( Kernel );
	}
};

class ui_set_button__
: public ui_button__
{
protected:
	virtual void NSXPCMOnCommand( void )
	{
		Kernel().Store();
	}
	virtual void NSXPCMOnClick( void )
	{
		Kernel().Store();
	}
};

class ui_get_button__
: public ui_button__
{
	virtual void NSXPCMOnCommand( void )
	{
		Kernel().Recall();
	}
	virtual void NSXPCMOnClick( void )
	{
		Kernel().Recall();
	}
};

class ui__
{
public:
	nsIDOMDocument *Document;
	ui_textbox__ Text;
	ui_set_button__ Set;
	ui_get_button__ Get;
	void Init( kernel___ &Kernel )
	{
		Text.Init();
		Set.Init( Kernel );
		Get.Init( Kernel );
	}
};


class eshared
: public ieshared
{
public:
  NS_DECL_ISUPPORTS
  NS_DECL_IESHARED

  eshared();

private:
  ~eshared();
  str::string Value;

protected:
  /* additional members */
};

class eprivate
: public ieprivate
{
public:
  NS_DECL_ISUPPORTS
  NS_DECL_IEPRIVATE

  eprivate();

private:
  ~eprivate();
  ui__ _UI;
  kernel___ _Kernel;

protected:
  /* additional members */
};

#endif