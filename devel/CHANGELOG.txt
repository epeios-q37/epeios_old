$Id$

BSO:
- (12/03/04) Adding 'Convert()' function with 'String' parameter.
- (03/05/04) disable thread-unsafe functions when working in multithreading.
-			 fixing the 'Allocate' bug.
	

CTN:
- Adding a 'FlushTest()' to '=' operator in debug mode.
- (23/04/04) Adding a test in debug mode to avoid retrieving of an undefined item.

DTE:
- (15/04/04) Introducing the new structure.

EPSMSC:
- Adding 'EPSMSC_COPYRIGHT()' macro.

ERR:
- Adding some minor features for the 'Intentional' error type.

IDXBTR
- Fixing bug in the 'tree_index_::Remove()' function

LCK:
- Adding 'GetUnlocked()' method.

SSNMNG:
- Using own row type for session id 'row__'.
- Adding 'sessions_manager_::IsValid()' method.
- Adding 'sessions_manager_::GetExpired()' methods.
- Adding navigation 'sessions_manager_::First()', 'sessions_manager_::Next()', ...) methods.
- (22/03/04) Fixing bug in session id creation.

TOL:
- Adding the 'E_DISCLOSE' macro.
- (05/05/04) Adding a 'Clock()' temporary workaround for CW.

--------
20040215
--------

GENERAL:
- Adapting to Code Warrior for Windows and Macintosh.
- Fixing g++ warning.
- Fixing CW warnings (all but 'unused argument').
- Adapting to changes in 'TOL' library ('E_' prefix for macros).
- Renaming 'Read', 'Write', 'Synchronize' adn 'data__' in
- 'Recall' 'Store', 'Flush' and 'datum__' in all memory-related libraries.

AEM:
- Bug fixing of the (p_)_amount_extent_manager__ and related classes.
- Adding (p_)_amount_extent_manager___ class.

BCH:
- Bug fixing of the E_BUNCHt__(_) and related classes.
- Rewriting 'WriteAndAdjust()' methods.
- Renaming in 'Append' and rewriting 'Add' methods.
- Renaming 'Row()' into 'Search()'.
- Fixing bug in 'StoreAndAdjust()' method.
- Adding 'GetRelations()' function.

BITBCH:
- Fixing bug.
- Renaming 'Add' to 'Append'.
- Adapting to changes in 'BCH' library.
- Adding 'E_BIT_BUNCH(t)(_) macros.
- Fixing 'operator =' bug.

BSO:
- Adding the 'Convert(...)' functions.

BTF:
- Adding a dummy 'Exists()' method, and the 'row__' type due to changes in 'STK' library.
- Adding 'Root' parameter to the 'Init' function.
- Handling empty tree.

BTS:
- Adding 'tBack' and 'tForward' in replacement of 'tParent'.
- Handling empty tree.

CCH:
- Renaming 'Add' to 'Append'.

CLNARG:
- Adapting to changes in 'BCH' library.
- Adaptinf to changes in 'CTN' library.

CSM:
- Adapting tochanges in 'MTK'.

CTN:
- Renaming the 'Sync()' method in 'Set()' and 'Flush()'.
- Fixing GNU GCC issues.
- Renaming 'Create()' into 'New()' to avoid mistakes.
- Renaming 'Add' to 'Append'.
- Adding features to avoid problems which appears when some 'Flush' call are missing.
- Fixing mistake in 'Delete' method.
- Adding some tests about flushing in debug context.

CPE:
- Adding detection of cygwin.
- Disabling C++ warning C4786.
- Adding multithreading detection for CodeWarrior.

CVM:
- Adapting to changes in 'MDR' library.

DBT:
- Adapting to changes in 'LST' library.
- Adapting to changes in 'LSTBCH' library.
- Adding the virtual 'DBTAllocate' method.
- Using 'E_NAVt' macro.
- Adapting to changes in 'BTF' library.

DTE:
- Adding the 'IsValid'()' method.

DTFBSC:
- Adding 'byte__', 'short__' and 'long__' type.

DTFRMF:
- Adapting to CW.
- Adding the '(Put|Get)Size' from the 'BKDTPM' library.

DTR:
- Fixing call to an iexistent method;

EPSMSC:
- Adapting to changes in the 'STF' library.

ERR:
- Renaming the 'throw' error in 'intentional'.
- Adding the 'iReturn' item.
- Adapting to changes in 'STF' library.

FIL:
- Fixing destructor bug.

FLW:
- Changing some type definition to simplify castings.
- Changing 'datum__' definition from 'char' to 'unsigned char' to avoid
  problem when used as integer.

FLX:
- Adding some casting to avoid warning under VC++.
- Adapting to changes in 'BCH' library.
- Adding missing 'const' qualifier.

GNUMLL:
- Adapting to changes in 'TOL' library.
- Adapting to changes in 'BCH' library.
- Adapting to changes in 'CTN' library.


IDS:
- Adapting to changes in 'STK' library.
- Fixing the 'operator =()' bug.

LGG:
- Adding 'Test' language for testing purpose.
- Adding language labels.
- Adding some features.

LST:
- Renaming 'CreateEntry' to 'New'.
- Introducing feature to fix some cast problem.
- Renaming 'Store' object in 'Locations' to avoid some name conflicts.
- Creation of the 'E_ROW' macro.

LSTBCH:
- Fixing bug.
- Adapting to changes in 'LST' library.

LSTCTN:
- Fixing bug.
- Adapting to changes in 'LST' library.
- Adapting to changes in 'CTN' library.
- Adding missing 'Flush()' to 'Delete' method.
- Renaming 'Create()' into 'New()' to avoid mistakes.
- Adding the 'New' with parameter.

MDR:
- Using 'Store', 'Recall' and 'Flush' instead of 'Write', 'Read' and 'Synchronize'.
- Renaming 'data__' in 'datum__'.

MMI:
- Adding some missing 'const' qualifier'.

MMM:
- Fixing 'reset()' bug.

MTK:
- Adapting to the NPTL (GNU/Linux Redhat 9)
- Removing old MTK... functions.

MTX:
- Using counter under cygwin due to problems with pthread mutexes .
- Adding of testing if we are in a multitasking context.
- Adapting to changes in 'TOL' library.

PIP:
- Adapting to changes in 'TOL' library.

QUE:
- Adding some missing 'const' qualifier.
- Adding 'E_STACK(r)' due to 'Exists()' method conflict due to changes in 'STK' library.

SSNMNG:
- Adapting to changes in 'LST' library.

STF:
- Renaming f[(out|in|err)[F]] to c[(out|in|err)[F]]

STK:
- Renaming 'ObjectExists' to 'Exists', to avoid some mistake risks.
- Adding 'Top()' method.
- Using 'E_NAVt' macro.
- Fixing the bug about the 'E_MEMORY_' used instead of 'E_MEMORYt_'.
- Adapting to changes in 'BCH' library.
- Introducing the 'Row' type to avoid conflict with default 'epeios::row__' type.
- Fixing the 'operator =()' bug.

STR:
- Adding 'ToU[S|B]()'.
- Trying to convert an empty string to a number sets the error pointer to 0 (instead of 'NONE').
- Renaming 'Add' to 'Append'.
- Adapting to changes in 'BCH' library.
- Adding the 'Begin' parameter to 'To...' Conversion method.
- Changing the way the 'ErrP' parameter is passed in the 'To...' conversion method.
- Adding 'To...' methods with variataion in the parameters.
- Adding stripping methods.

TAGDTC:
- Adapting to changes in 'TYM' library.

TAGEXP:
- Adapting to changes in 'TOL' and 'BCH' libraries.

TOL:
- Correcting the problem in 'NAVt()' for which the gcc 3.x preprocessor issued a warning.
- Adapting to changes in 'STF' library.
- Adapting to CodeWarrior.
- Renaming 'Yield()' to 'Defer()' due to the silly 'Yield()' definition under Windows.
- Adding 'AUTO4()' macro.

TSRCPR:
- Adapting to changes in 'TOL' library.
- Adapting to changes in 'STR' library.

TTR:
- Adapting to changes in 'STF' library.

TXF:
- Adapting to changes in 'FLW' library.

TXMPGH:
- Adapting to changes in 'TOL' library.
- Adapting to changes in 'BCH' library.

TXMTBL:
- Adapting to changes in 'XTF' library.
- Adapting to changes in 'TOL' library.
- Adapting to changes in 'CTN' library.

TYM:
- Fixing bug.
- Revert to version before adaptation to CW.
- Adding 'const' qualifier to return value to avoid smoe problems.
- Renaming 'Locate' into 'Search'.

UYM:
- Fixing bug in 'untyped_memory__(_)'
- Renaming 'Locate' into 'Search'.
- Fixing 'Search()' bug.

XTF:
- Adapting to changes in 'BCH' library.
- Adapting to changes in 'FLW' library.

--------
20030219
--------

GENERAL:
- Creating library 'BTS'.
- Creating library 'BTF'.
- Creating library 'LSTBCH'.
- Creating library 'LSTCTN'.

AEM:
- Adding 'Exists' method.

CPE:
- Adapting to Metrowerks Codewarrior.

IDS:
- Adapting to changes in 'STK' library.

IDXBTQ:
- Renaming 'Remove', to 'Delete' which seems more appropriate.

LST:
- Renaming 'Remove', to 'Delete' which seems more appropriate.

QUE:
- Renaming 'Remove', to 'Delete' which seems more appropriate.
- Adding 'Exists' method.
- Using the 'BCH' library instead of 'AEM' and 'UYM'.

SSNMNG:
- Adapting to changes in 'LST' library.
- Adapting to changes in 'QUE' library.

STK:
- Renaming 'Exists()' method to 'ObjectExists()', due to modification of the 'tol::NAVt' macro.

STR:
- Adding 'Insert()' method.

TOL:
- Adding the 'Exists()' method to 'NAV(t)' macro.
- Fixong bug in 'AUTO3' macro.

--------
20030104
--------

GENERAL:
- Adding 'CCH'.
- Adding 'SMA' to use in 'CCH'.
- Adding portable data types.
- Adding 'HTP' library.
- Introducing '_' prefix for internal/intermediate classes.
- Creating library 'IDS'.

AEM:
- Adding portable versions of classes.

BCH:
- Adding portable versions of classes.
- Adding 'bunch___'.
- Adapting to the new 'AUTO(x)' macros.
- Fixing spelling error.

BITBCH:
- Adapting to the new 'AUTO(x)' macros.

BSO:
- Adding the 'sign__' type.
- Adding the portable ('p_...') types.
- Removing old unused code.
- Force 'sign__' to contain only -1,0,1.

BTR:
- Adapting to the new 'AUTO(x)' macros.
- Renaming of classes and methods.

CPE:
- Adding 'CPE__USE_[VC|GCC]_WORKAROUND'.

CTN:
- Adding 'reset()' method to the item-related objects.
- Renaming to 'Sync' where needed.
- Adding GCC workaround.
- Adding VC++ workaround.
- Adapting to the new 'AUTO(x)' macros.

DTR:
- Adapting to changes in 'que'.
- Adapting to the new 'AUTO(x)' macros.
- Adapting to changes in 'BTR' library.

EPSMSC:
- Removing IDEALX-related text.
- Adding Epeios text.

ERR:
- Adding external error (ERRX, ext).
- Changing 'brk' to 'bkd'.
- Adding 'bInexistentData' for 'bkd' error.
- Adding debugging feature.

FLM:
- Using now the UNIX system calls under UNIX instead of the C/C++ call (which seems bugged).
- Using low-level io functions under Windows instead of the C/C++ call.
- Adding a static part for standardization.

FLW:
- Fixing bug which fills the cache even if there is asked for more then the cache can contain.
- Adding length feature.
- 'data__' type renamed in 'datum__'.
- Adding 'Skip()' method.
- Adding 'virtual' qualifier for destructor.
- Fixing 'pure virtual call' bug when socket disconnected.

FLX:
- Adapting to vhanges in 'FLW'.

IDXBTR:
- Adding 'MarkAs...()' method.
- Adapting to new 'AUTO(x)' macros.
- Adapting to changes in 'BTR' library.

IDXBTQ:
- Adding 'E_IBTREEt()'.
- Adding 'MarkAs...()' method.
- Adding 'E_INDEX(_)'.
- Adapting to new 'AUTO(x)' macros.

IDXQUE:
- Fixing bugs concerning row type.
- Adding 'MarkAs...()' method.
- Adapting to new 'AUTO(x)' macros.

LGG:
- Removing the 'lDefault' "language".

LST:
- Adapting to the new 'AUTO(x)' macros.
- Using new library 'IDS'.

MDR:
- Adding some features for portable data types.
- Removing 'basic_' prefix.

MMG:
- Adapting to new 'AUTO(x)' macros.

QUE:
- Fixing bug from typed queue.
- Fixing amount/size handling bug.
- Replacing 'Insert...()' methods by 'Become...()' methods.

MMG:
- Fixing autonome declaration bug.
- Adaptation to changes in underlying libraries.
- Coding of operators '->' and '*' to replace operator '()'.

MMM:
- Adding 'E_MULTIMEMORY(_)' #define.

QUE:
- Adapting to the new 'AUTO(x)' macros.

SALCSM:
- Adapting to changes in 'FLW'.

SCK:
- Adapting to changes in 'FLW'.

SSNMNG:
- Adapting to modification made in 'IDXBTQ' library.

STF:
- Adapting to vhanges in 'FLW'.

STK:
- Adapting to the new 'AUTO(x)' macros.
- Adding 'Exists' function.

STR:
- Adding missing 'const' qualifier.
- Adding 'ToLF()' method.
- Adding 'Init()' with str::string_ argument.

TOL:
- Fixing bug in the 'NAVt()' macro.
- Rewriting of the 'AUTO(x)' macros.

TSRCPR:
- Using 'que' instead of 'idxque'.
- Adapting to the new 'AUTO(x)' macros.

TXF:
- Adapting to changes in 'FLW'.

TXMTBL:
- Adding some helpful methods.

TYM:
- Adding 'memory___' class.
- Adapting to the new 'AUTO(x)' macros.
- Adding a forgottent 'const' qualifier.
- Fixing problems with 'Position' method.
- Adding 'Swap()' method.

UYM:
- Fixing bug which have as result the loss of the memory pilote when calling 'reset()'.
- Fixing 'Fill()' compilation error.
- Adding 'untyped_memory___' class.
- Renaming some classes.
- Fixing buf in overflow detection in 'untyped_memory__' class.
- Adding a forgotten 'const' qualifier.
- Fixing pointer of pointer bug.

XTF:
- Adapting to vhanges in 'FLW'.



--------
20011119
--------

CLNARG:
- Adding a 's' to the 'Get<Option|Command>Label' function name.
- Adding 'Separator' parameter to 'GetCommandLabels' method.
- Adding 'CLNARG_<DETAIL|GENERAL>_SEPARATOR' defines.
- Adding 'view' enum and modifying functions as needed.

ITG:
- moving it to the 'emth' subproject.

XMLxxx:
- Renamed to 'HOSxxx' and moved to their own project ('ehos').

XMLDBS:
- Adding missing return value.

TOL:
- Fixing cast problem.
- Removing incorrect comment which disturbs quickdoc generation.

TXF:
- Fixing long double printing bug.

--------
20010804
--------

GENERAL:
- moving backed-related libraries ('BKDEND', 'BKDxxx' & also 'FRTEND') to 'ebkd' sub-project.
- moving cgi-related libraries and software ('FRTEND', 'URLARG' and 'getbkdapi') to 'ecgi' sub-project.
- Using the g++ 3.0 due to an ICE by gcc 2.95.3
- Removing the obolete 'BRK*' and 'BROKER' libraries. You may use the libraries from the 'ebkd' sub-project.
- Adapting to Metrowerks CodeWarrior

BCH:
- Adding the 'Init()' function with parameter.

CPE:
- Adding the 'CPE__[NO_]IOS_EXTENSION'

ERR:
- Introducing 'err' namespace due to conflict with content of a g++ 3.0 header.

FIL:
- Make use of the 'CPE__[NO_]IOS_EXTENSION' to handle the 'ios::nocreate' problem.

FLM:
- Make use of the 'CPE__[NO_]IOS_EXTENSION' to handle the 'ios::nocreate' problem.

STF:
- Make changes required by g++ 3.0.

STR:
- Adding the 'Init()' function with parameter.

TSRCPR:
- Changes required by g++ 3.0.

TTR:
- Changes required by g++ 3.0.

TOL:
- Make use of the 'CPE__[NO_]IOS_EXTENSION' to handle the 'ios::nocreate' problem.

XMLCOR:
- Adding the 'Convert()' function.

XMLDBM:
- Using the 'Convert()' from 'XMLCOR' in 'Filter_()'.

XMLDCM:
- Using the 'Convert()' from 'XMLCOR' in 'Filter_()'.

--------
20010618
--------

AEM:
- Adapting to changes in 'TOL'.

BCH:
- Adapting to changes in 'TOL'.

BCKEND:
- Adapting to changes in 'TOL'.

BITBCH
- Adapting to changes in 'TOL'.

BTR:
- Adapting to changes in 'TOL'.

CTN:
- Adapting to changes in 'TOL'.

GNUMLL:
- Adapting to changes in 'TOL'.

MMI:
- Adapting to changes in 'TOL'.

QUE:
- Adapting to changes in 'TOL'.

LST:
- Adapting to changes in 'TOL'.

STR:
- Adapting to changes in 'TOL'.

TAGDTC:
- Adapting to changes in 'TOL'.

TAGEXP:
- Adapting to changes in 'TOL'.

TOL:
- Adding 'TYPEDEF__()'
- Using operator '->' for 'TYPEDEF()' and 'TYPEDEF__()'
- Disable VC++ warning issue due to 'TYPEDEF()'.
- 'TYPEDEF_()' makes now automatically 'AUTO()'.
- Adding 'operator =()' to 'TYPEDEF_()'.


TSRCPR:
- Adapting to changes in 'TOL'.

TYM:
- Adapting to changes in 'TOL'.

XMLCOR:
- Adding 'quick_tag...'.

XMLDBS:
- Methods of filler which handles tag/attribute value returns now a value row.
- Adding the 'GetDatabase()' method.

XMLDCM:
- Methods of filler which handles tag/attribute value returns now a value row.
- Adding the 'GetDocument()' method.

XMLTAG:
- Adapting to changes in 'TOL'.



--------
20010604
--------

GENERAL:
- Adding 'DTE'.

BSO:
- using namespace.
- adding 'bso::sign__' type.

BTR:
- Correcting a namespace lack due to (VC++ ?) template issue.

CGIFRT:
- adapting to changes in 'BSO'.

ERR:
- adapting to changes in 'TOL'.

FAM:
- using namespace.

FNM:
- adapting to changes in 'TOL'.

DTFBSC:
- adapting to changes in 'BSO'.

DTRRMF:
- adapting to changes in 'BSO'.

IDXBTR:
- adapting to changes in 'BSO'.

LST:
- Fixing bug of 'Next' function (list_::Successeur_).

MTX:
- Adapting to changes in 'TOL'.
- Coding VC++ 'Yield()' workaround.

PIP:
- Adapting to changes in 'TOL'.
- Coding VC++ 'Yield()' workaround.

SSNMNG:
- adapting to changes in 'BSO'.

TOL:
- Using namespace.
- Deleting 'tol__manipulateur' class.
- Adding 'TYPEDEF_'.
- Coding VC++ 'Yield()' workaround.

TXMPGH:
- Introducing new 'line(s)(_)' type.

XMLDBS:
- Correcting XML writing bug (attribute as ending tag).
- Add a 'PushTag' function to accept same input parameter with different type.

UYM:
- Adapting to changed in 'FAM'.


--------
20010513
--------

General changes.
- I had some difficulties with the 'broker::broker' object, due to
the fact that class name and namespace are the same, (had the same
problem with 'set::set', which becames 'bch::bunch'), all libraries
related to 'broker' are renamed into 'backend'.
- Removing all the 'BROKERx' libraries.
- Adding the 'XMLxxx' libraries.

BCH:
- fixing 'WriteAndAdjust' bug.

BCKEND:
- Created from 'BROKER'.

BKDCST:
- Created from 'BRKCST'.

BKDDCB:
- Created from 'BRKANL'.

BKDCMD:
- Created from 'BRKCMD'.

BKDRQM:
- Created from 'BRKRQM'.

BKDTPM:
- Created from 'BRKTPM'.

BRKANL:
- Replaced by 'BKDDCB'.

BRKCST:
- Replaced by 'BKDCST'.

BRKCMD:
- Replaced by 'BKDCMD'.

BRKRQM:
- Replaced by 'BKDRQM'.

BRKTPM:
- Replaced by 'BKDTPM'.

BROKER:
- Replaced by 'BCKEND'.

BROKER:
- adapting to 'LST' modifications.

CLNARG:
- Adding the 'Parameter' parameter to 'PrintOptionUsage'.

CLT:
- Adapting to 'BSO' modifications.

EPSMSC:
- Update.

FRTEND:
- Adapting to the new 'BKDxxx' libraries.
- Adapting to modifications in 'BSO'.

GNUMLL:
- Adapting to 'CTN', 'MMM', 'BSO', 'TXMPGH' modifications.
- Using 'EPEIOS' stuff.
- Move all 'operator <<' from inside namespace to outside, because I had trouble with linking.

STF: 
- Take away all the internal 'EOFT' stuff. Using the standard 'EOFD' stuff instead.

TAGEXP:
- Adapting to changes in 'STF'.

TOL:
- 'TOLYield' is now available only in a multitasking context.

TSRCPR:
- Fixing '#define' bogue.
- Fixing tagged comment in comment bug.

TXMPGH:
- Introducing namespace.
- Adapting to namespace use in 'CTN', 'STR' and 'BSO'.
- Using 'EPEIOS' stuff.

TXMTBL:
- Changing 'commentary' label to 'comment'.

XMLDBS:
- Adding method which are faster by allowing the direct use of tag row
  in addition of the tag name. 
- Adding missing some missing methods regarding 'XMLDCM'.

XMLDCM:
- Adding method which are faster by allowing the direct use of tag row
  in addition of the tag name. 

XMLPRS:
- Adding the parsing into a XML database.

XTF:
- Correct a bug due to a missing 'EOX()' in 'GetLine()'.

--------
20000501
--------

Creation
